{"createdAt":"2025-07-15T15:28:06.444Z","updatedAt":"2025-07-29T16:30:01.000Z","id":"j5YSuMR8vKjmx8NQ","name":"Open Ticket data","active":true,"isArchived":false,"nodes":[{"parameters":{"jsCode":"const setCookieHeader = $json.headers['set-cookie'];\n\nconst jsession = setCookieHeader.find(c => c.startsWith('JSESSIONID=')).split(';')[0];\nconst serverid = setCookieHeader.find(c => c.startsWith('SERVERID=')).split(';')[0];\n\nreturn [\n  {\n    json: {\n      cookieHeader: `${jsession}; ${serverid}`\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1200,112],"id":"c236df27-86be-4ca4-b47d-c99689fed124","name":"Get cookie/sessionID's"},{"parameters":{"method":"POST","url":"https://pgam.sysaidit.com/api/v1/login","sendBody":true,"contentType":"raw","rawContentType":"application/JSON","body":"{   \"user_name\": \"Ratkinson\",   \"password\": \"Wizzy3004%25%5E%26\" }","options":{"response":{"response":{"fullResponse":true}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-1376,112],"id":"236ca4bf-8fd7-4109-9e71-5a10a2f57556","name":"Login credentials","retryOnFail":true},{"parameters":{"url":"=https://pgam.sysaidit.com/api/v1/sr?{{$json.statusQuery}}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Cookie","value":"={{ $('Get cookie/sessionID\\'s').item.json.cookieHeader }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-704,96],"id":"18509567-9e6a-4395-ae9a-29dcc52c809a","name":"ApiTickets","retryOnFail":true},{"parameters":{"authentication":"serviceAccount","documentId":{"__rl":true,"value":"117E9W7q0sZzQ5JM5Pt1cclrYUk-Gx_h9X3Wf7N5Xef0","mode":"id"},"sheetName":{"__rl":true,"value":590001501,"mode":"list","cachedResultName":"Ticket data","cachedResultUrl":"https://docs.google.com/spreadsheets/d/117E9W7q0sZzQ5JM5Pt1cclrYUk-Gx_h9X3Wf7N5Xef0/edit#gid=590001501"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[-688,304],"id":"058ccbdc-55f8-4076-9b7f-9576985c8733","name":"SheetRow","retryOnFail":true,"executeOnce":true,"credentials":{"googleApi":{"id":"yW4wsBNp1riA7tC9","name":"Google Service Account account"}}},{"parameters":{"authentication":"serviceAccount","operation":"appendOrUpdate","documentId":{"__rl":true,"value":"117E9W7q0sZzQ5JM5Pt1cclrYUk-Gx_h9X3Wf7N5Xef0","mode":"id"},"sheetName":{"__rl":true,"value":590001501,"mode":"list","cachedResultName":"Ticket data","cachedResultUrl":"https://docs.google.com/spreadsheets/d/117E9W7q0sZzQ5JM5Pt1cclrYUk-Gx_h9X3Wf7N5Xef0/edit#gid=590001501"},"columns":{"mappingMode":"autoMapInputData","value":{},"matchingColumns":["TicketID"],"schema":[{"id":"TicketID","displayName":"TicketID","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Request time","displayName":"Request time","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Applicant","displayName":"Applicant","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Responsibility","displayName":"Responsibility","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Status","displayName":"Status","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Priority","displayName":"Priority","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Category","displayName":"Category","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Sub Category","displayName":"Sub Category","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Third Level Category","displayName":"Third Level Category","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Difficulty Category","displayName":"Difficulty Category","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Impact","displayName":"Impact","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Location","displayName":"Location","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Main CI","displayName":"Main CI","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Title","displayName":"Title","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"hash","displayName":"hash","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{"cellFormat":"RAW"}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[-848,304],"id":"f91401fc-2342-4a5e-9e42-8e18c45eac0f","name":"Append or update row in sheet","retryOnFail":true,"credentials":{"googleApi":{"id":"yW4wsBNp1riA7tC9","name":"Google Service Account account"}}},{"parameters":{"jsCode":"function simpleHash(obj) {\n  const str = JSON.stringify(obj);\n  let hash = 0, i, chr;\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i);\n    hash = ((hash << 5) - hash) + chr;\n    hash |= 0;\n  }\n  return hash.toString();\n}\n\nreturn items.map(item => {\n  const data = item.json;\n  \n  function normalizeTime(t) {\n  return t.replace(/(\\s)(\\d{1}):/, '$10$2:');\n}\n\nconst hashBase = {\n  \"Request time\": normalizeTime(data[\"Request time\"] || \"\"),\n  Applicant: data[\"Applicant\"] || \"\",\n  \"Responsibility\": data[\"Responsibility\"] || \"\",\n  Status: data[\"Status\"] || \"\",\n  Priority: data[\"Priority\"] || \"\",\n  Category: data[\"Category\"] || \"\",\n  \"Sub Category\": data[\"Sub Category\"] || \"\",\n  \"Third Level Category\": data[\"Third Level Category\"] || \"\",\n  \"Difficulty Category\": data[\"Difficulty Category\"] || \"\",\n  Impact: data[\"Impact\"] || \"\",\n  Location: data[\"Location\"] || \"\",\n  \"Main CI\": data[\"Main CI\"] || \"\",\n  Title: data[\"Title\"]\n};\n\n  const recomputedHash = simpleHash(hashBase);\n  const storedHash = data.hash?.toString() || \"\";\n\n  return {\n  json: {\n    TicketID: data.TicketID?.toString() || \"\",\n    rowIndex: data.row_number,\n    recomputedHash,\n    hashBase: JSON.stringify(hashBase),  // <== Add this\n    storedHash,\n    _source: \"sheet\"\n  }\n};\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-512,304],"id":"3e2c25ee-89e5-40a6-bd1b-c674657016ca","name":"Hash Sheet Tickets"},{"parameters":{"jsCode":"function simpleHash(obj) {\n  const str = JSON.stringify(obj);\n  let hash = 0, i, chr;\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i);\n    hash = ((hash << 5) - hash) + chr;\n    hash |= 0;\n  }\n  return hash.toString();\n}\n\nfunction getValueCaption(infoArray, possibleKeys) {\n  for (const key of possibleKeys) {\n    const match = infoArray.find(e => e.key?.toLowerCase() === key.toLowerCase());\n    if (match) return match.valueCaption || \"\";\n  }\n  return \"\";\n}\n\nreturn items.map(item => {\n  const info = item.json.info || [];\n\n  const title = getValueCaption(info, [\"title\", \"Title\"])\n  const thirdLevelCat  = getValueCaption(info, [\"third_level_category\", \"Third Level Category\"]);\n  const responsibility = getValueCaption(info, [\"responsibility\", \"Responsibility\"]);\n  const category = getValueCaption(info, [\"problem_type\", \"Category\"]);\n  const subCategory    = getValueCaption(info, [\"problem_sub_type\", \"Sub Category\"]);\n  const difficulty     = getValueCaption(info,  [\"cust_list1\", \"Difficulty Category\"]);\n  const user      = getValueCaption(info, [\"submit_user\", \"Submit user\"]);\n  const status    = getValueCaption(info, [\"status\", \"Status\"]);\n  const priority  = getValueCaption(info, [\"priority\", \"Priority\"]);\n  const impact    = getValueCaption(info, [\"impact\", \"Impact\"]);\n  const location  = getValueCaption(info, [\"Location\", \"Location\"]);\n  const reqTime   = getValueCaption(info, [\"Request time\", \"insert_time\", \"Request Time\"]);\n  const mainCI    = getValueCaption(info, [\"ci\", \"Main CI\"]);\n\n  const hashBase = {\n    \"Request time\": reqTime,\n    Applicant: user,\n    Responsibility: responsibility,\n    Status: status,\n    Priority: priority,\n    Category: category,\n    \"Sub Category\":subCategory,\n    \"Third Level Category\":thirdLevelCat,\n    \"Difficulty Category\":difficulty,\n    Impact: impact,\n    Location: location,\n    \"Main CI\": mainCI,\n    Title: title\n  };\n\n  return {\n  json: {\n    TicketID: item.json.id?.toString() || \"\",\n    ...hashBase,\n    //hashBase: JSON.stringify(hashBase),  // <== Add this\n    hash: simpleHash(hashBase),\n    //_source: \"api\"\n  }\n};\n});"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-528,96],"id":"67d23545-e38d-4194-a6ab-27aaadb64d63","name":"API Ticket Hash"},{"parameters":{"rule":{"interval":[{"field":"minutes"}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-1552,112],"id":"f04ed1d7-55a8-43b0-ac63-86b84596a888","name":"Schedule Trigger"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"84d5b24b-fe87-4a21-91d6-8bb6ea8f408b","leftValue":"={{ $json.rowIndex }}","rightValue":0,"operator":{"type":"number","operation":"notEmpty","singleValue":true}},{"id":"06a5d9c4-166b-4a14-abf4-05197638e91d","leftValue":"={{ $json.rowIndex }}","rightValue":1,"operator":{"type":"number","operation":"gt"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[80,192],"id":"18807456-732e-4034-84c6-bf57285cc91d","name":"If","executeOnce":false,"retryOnFail":true},{"parameters":{"jsCode":"// Mapping of status IDs to class types\nconst classMap = {\n  \"1\": \"open\",    // New\n  \"2\": \"open\",    // Open\n  \"4\": \"closed\",  // Resolved\n  \"5\": \"open\",    // Pending\n  \"6\": \"open\",    // Postponed\n  \"9\": \"open\",    // User Responded\n  \"10\": \"open\",   // Pending: Waiting on Hardware\n  \"11\": \"open\",   // Pending: Waiting on External Party\n  \"98976\": \"closed\", // Auto Archive\n  \"98980\": \"closed\"  // Merged-Archived\n};\n\n// Get the status list from previous node\nconst statusList = items[0].json.values || [];\n\n// Extract only the status IDs classified as \"open\"\nconst openStatusIDs = statusList\n  .filter(status => classMap[status.id] === \"open\")\n  .map(status => status.id);\n\n// Join into query string format\nconst statusQuery = `status=${openStatusIDs.join(\",\")}`;\n\n// Output it for use in the next API node\nreturn [\n  {\n    json: {\n      openStatusIDs,\n      statusQuery\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-864,-16],"id":"5644d686-260a-4465-930d-4d906fb46ee8","name":"Status IDs with Open"},{"parameters":{"url":"https://pgam.sysaidit.com/api/v1/list/status?entity=sr","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Cookie","value":"={{ $json.cookieHeader }}"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-1024,-16],"id":"62f79cac-501c-4e7c-8c5b-515ea8100039","name":"Get Status List","retryOnFail":true},{"parameters":{"jsCode":"const apiTicketIds = new Set($items(\"API Ticket Hash\").map(item => item.json.TicketID));\n\nconst closedTickets = $items(\"Hash Sheet Tickets\").filter(item => {\n  const sheetTicketId = item.json.TicketID;\n  return !apiTicketIds.has(sheetTicketId);\n});\n\nreturn closedTickets.map(item => ({\n  json: {\n    TicketID: item.json.TicketID,\n    rowIndex: item.json.rowIndex\n  }\n}));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-112,192],"id":"f4a53448-84d0-406b-897e-2ea6ff1ddbf9","name":"Find Closed Tickets","retryOnFail":true,"executeOnce":true,"alwaysOutputData":false},{"parameters":{"authentication":"serviceAccount","operation":"delete","documentId":{"__rl":true,"value":"117E9W7q0sZzQ5JM5Pt1cclrYUk-Gx_h9X3Wf7N5Xef0","mode":"id"},"sheetName":{"__rl":true,"value":590001501,"mode":"list","cachedResultName":"Ticket data","cachedResultUrl":"https://docs.google.com/spreadsheets/d/117E9W7q0sZzQ5JM5Pt1cclrYUk-Gx_h9X3Wf7N5Xef0/edit#gid=590001501"},"startIndex":"={{ $json.rowIndex }}","numberToDelete":"={{ $json.rowIndex + 1 }}"},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[320,176],"id":"e8d78e17-f0d9-4807-a9f5-27c4c0174383","name":"Delete rows or columns from sheet","alwaysOutputData":false,"executeOnce":false,"retryOnFail":true,"credentials":{"googleApi":{"id":"yW4wsBNp1riA7tC9","name":"Google Service Account account"}}},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[-304,192],"id":"f1ff1fdf-648a-4c38-9b56-165ced9a4483","name":"Merge"}],"connections":{"Get cookie/sessionID's":{"main":[[{"node":"Get Status List","type":"main","index":0}]]},"Login credentials":{"main":[[{"node":"Get cookie/sessionID's","type":"main","index":0}]]},"ApiTickets":{"main":[[{"node":"API Ticket Hash","type":"main","index":0}]]},"SheetRow":{"main":[[{"node":"Hash Sheet Tickets","type":"main","index":0}]]},"Append or update row in sheet":{"main":[[{"node":"SheetRow","type":"main","index":0}]]},"Hash Sheet Tickets":{"main":[[{"node":"Merge","type":"main","index":1}]]},"API Ticket Hash":{"main":[[{"node":"Append or update row in sheet","type":"main","index":0},{"node":"Merge","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Login credentials","type":"main","index":0}]]},"If":{"main":[[{"node":"Delete rows or columns from sheet","type":"main","index":0}]]},"Status IDs with Open":{"main":[[{"node":"ApiTickets","type":"main","index":0}]]},"Get Status List":{"main":[[{"node":"Status IDs with Open","type":"main","index":0}]]},"Find Closed Tickets":{"main":[[{"node":"If","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Find Closed Tickets","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","timezone":"Etc/GMT","callerPolicy":"workflowsFromSameOwner","timeSavedPerExecution":3},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]},"node:Schedule Trigger (To be used)":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"232a1a34-8bf9-40f3-831a-82e55999fd6f","triggerCount":1,"tags":[]}