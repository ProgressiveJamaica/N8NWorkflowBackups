{
  "createdAt": "2025-08-13T21:55:58.337Z",
  "updatedAt": "2025-08-14T15:53:28.405Z",
  "id": "0ykgir1GJaoP7uSD",
  "name": "Open ticket data test",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "jsCode": "const setCookieHeader = $json.headers['set-cookie'];\n\nconst jsession = setCookieHeader.find(c => c.startsWith('JSESSIONID=')).split(';')[0];\nconst serverid = setCookieHeader.find(c => c.startsWith('SERVERID=')).split(';')[0];\n\nreturn [\n  {\n    json: {\n      cookieHeader: `${jsession}; ${serverid}`\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -224,
        112
      ],
      "id": "dd29686c-0b1f-4273-b889-820e2a856ddc",
      "name": "Get cookie/sessionID's"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://pgam.sysaidit.com/api/v1/login",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/JSON",
        "body": "{   \"user_name\": \"Ratkinson\",   \"password\": \"Sashee1234%25%5E%26\" }",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -416,
        112
      ],
      "id": "a258c781-b2ba-4101-973c-974b21fa193d",
      "name": "Login credentials",
      "retryOnFail": true
    },
    {
      "parameters": {
        "url": "=https://pgam.sysaidit.com/api/v1/sr?{{$json.statusQuery}}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Cookie",
              "value": "={{ $('Get cookie/sessionID\\'s').item.json.cookieHeader }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        368,
        112
      ],
      "id": "054e13f6-f552-44c9-b372-edc40906f569",
      "name": "ApiTickets",
      "retryOnFail": true
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1uvN_eVpP3XeWCAssZOay5N76KDawuU2Q_O3sDP3DML8",
          "mode": "list",
          "cachedResultName": "Ticket Data test",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1uvN_eVpP3XeWCAssZOay5N76KDawuU2Q_O3sDP3DML8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 377171780,
          "mode": "list",
          "cachedResultName": "Sheet3",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1uvN_eVpP3XeWCAssZOay5N76KDawuU2Q_O3sDP3DML8/edit#gid=377171780"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {
            "TicketID": "={{ $json.TicketID }}"
          },
          "matchingColumns": [
            "TicketID"
          ],
          "schema": [
            {
              "id": "TicketID",
              "displayName": "TicketID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Request Time",
              "displayName": "Request Time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Applicant",
              "displayName": "Applicant",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Responsibility",
              "displayName": "Responsibility",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Priority",
              "displayName": "Priority",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Category",
              "displayName": "Category",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Sub Category",
              "displayName": "Sub Category",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Third Level Category",
              "displayName": "Third Level Category",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Difficulty Category",
              "displayName": "Difficulty Category",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Impact",
              "displayName": "Impact",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Location",
              "displayName": "Location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Main CI",
              "displayName": "Main CI",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Max Support Level",
              "displayName": "Max Support Level",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Source",
              "displayName": "Source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Resolution",
              "displayName": "Resolution",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "SR Custom List 2",
              "displayName": "SR Custom List 2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Parent ID",
              "displayName": "Parent ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Solution",
              "displayName": "Solution",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Request User Manager",
              "displayName": "Request User Manager",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Survey Status",
              "displayName": "Survey Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Weight",
              "displayName": "Weight",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Followup Planned Date",
              "displayName": "Followup Planned Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "SR Custom Int 2",
              "displayName": "SR Custom Int 2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "SR Custom Date 1",
              "displayName": "SR Custom Date 1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "SR Custom Int 1",
              "displayName": "SR Custom Int 1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Total Activities time",
              "displayName": "Total Activities time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Reopen Counter",
              "displayName": "Reopen Counter",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "SR Custom Date 2",
              "displayName": "SR Custom Date 2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Archive",
              "displayName": "Archive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Close time",
              "displayName": "Close time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Merged service records",
              "displayName": "Merged service records",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Version",
              "displayName": "Version",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Is Escalated",
              "displayName": "Is Escalated",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Closure Information",
              "displayName": "Closure Information",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Assigned Counter",
              "displayName": "Assigned Counter",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Alert",
              "displayName": "Alert",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Description",
              "displayName": "Description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Main task",
              "displayName": "Main task",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Request username",
              "displayName": "Request username",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Followup User",
              "displayName": "Followup User",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Workaround",
              "displayName": "Workaround",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Current Support Level",
              "displayName": "Current Support Level",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Modify time",
              "displayName": "Modify time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Success Rating",
              "displayName": "Success Rating",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Modify User",
              "displayName": "Modify User",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "SR Custom Notes",
              "displayName": "SR Custom Notes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Followup Text",
              "displayName": "Followup Text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email Account",
              "displayName": "Email Account",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Urgency",
              "displayName": "Urgency",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Request user",
              "displayName": "Request user",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Sub Type",
              "displayName": "Sub Type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Followup Actual Date",
              "displayName": "Followup Actual Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Department",
              "displayName": "Department",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Asset ID",
              "displayName": "Asset ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "CC",
              "displayName": "CC",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Time to Repair",
              "displayName": "Time to Repair",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Main Asset",
              "displayName": "Main Asset",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Time to Respond",
              "displayName": "Time to Respond",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Due Date",
              "displayName": "Due Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "SR Custom Text 1",
              "displayName": "SR Custom Text 1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "SR Custom Text 2",
              "displayName": "SR Custom Text 2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Merged to",
              "displayName": "Merged to",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Account",
              "displayName": "Account",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Escalation Level",
              "displayName": "Escalation Level",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Classification",
              "displayName": "Classification",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Admin group",
              "displayName": "Admin group",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Service Record Type",
              "displayName": "Service Record Type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hash",
              "displayName": "hash",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Store",
              "displayName": "Store",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Owner",
              "displayName": "Owner",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "cellFormat": "=USER_ENTERED"
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        192,
        320
      ],
      "id": "0c477935-8b7f-47f3-b139-081cccd7d0f4",
      "name": "Append or update row in sheet",
      "retryOnFail": true,
      "credentials": {
        "googleApi": {
          "id": "Fr8gBQ8Q5zSOdGfU",
          "name": "Google Service Account account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "function simpleHash(obj) {\n  const str = JSON.stringify(obj);\n  let hash = 0, i, chr;\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i);\n    hash = ((hash << 5) - hash) + chr;\n    hash |= 0;\n  }\n  return hash.toString();\n}\n\nfunction getValueCaption(infoArray, possibleKeys) {\n  for (const key of possibleKeys) {\n    const match = infoArray.find(e =>\n      e.key?.toLowerCase() === key.toLowerCase() ||\n      e.keyCaption?.toLowerCase() === key.toLowerCase()\n    );\n    if (match) return match.valueCaption || \"\";\n  }\n  return \"\";\n}\n\nconst preferredOrder = [\n  \"TicketID\",\n  \"Request Time\",\n  \"Applicant\",\n  \"Responsibility\",\n  \"Status\",\n  \"Priority\",\n  \"Category\",\n  \"Sub Category\",\n  \"Third Level Category\",\n  \"Difficulty Category\",\n  \"Impact\",\n  \"Location\",\n  \"Main CI\",\n  \"Title\"\n];\n\n// Keys we don't want duplicated\nconst excludedKeys = [\n  \"submit_user\", \"Submit user\",\n  \"responsibility\", \"Assigned to\", \"Responsibility\",\n  \"insert_time\", \"Request time\", \"Request Time\",\n  \"problem_sub_type\", \"Sub-category\", \"Sub Category\",\n  \"=== Hide/Show Divider ===\"\n];\n\nreturn items.map((item, index) => {\n  const info = item.json.info || [];\n\n  // Extract renamed values\n  const reqTime = getValueCaption(info, [\"Request time\", \"insert_time\", \"Request Time\"]);\n  const applicant = getValueCaption(info, [\"submit_user\", \"Submit user\"]);\n  const responsibility = getValueCaption(info, [\"responsibility\", \"Assigned to\", \"Responsibility\"]);\n  const subCategory = getValueCaption(info, [\"problem_sub_type\", \"Sub-category\", \"Sub Category\"]);\n\n  // Build dataset excluding duplicates and unwanted keys\n  const fieldData = info.reduce((acc, field) => {\n    const keyCaption = field.keyCaption?.trim();\n    if (!keyCaption) return acc;\n\n    // Skip if in excludedKeys\n    if (excludedKeys.includes(field.key) || excludedKeys.includes(keyCaption)) {\n      return acc;\n    }\n\n    acc[keyCaption] = field.valueCaption ?? \"\";\n    return acc;\n  }, {});\n\n  // Add renamed/preferred fields\n  fieldData[\"TicketID\"] = item.json.id?.toString() || \"\";\n  fieldData[\"Request Time\"] = reqTime;\n  fieldData[\"Applicant\"] = applicant;\n  fieldData[\"Responsibility\"] = responsibility;\n  fieldData[\"Sub Category\"] = subCategory;\n\n  // Reorder preferred fields\n  const orderedData = {};\n  preferredOrder.forEach(field => {\n    orderedData[field] = fieldData[field] ?? \"\";\n  });\n\n  // Append remaining fields\n  Object.keys(fieldData).forEach(key => {\n    if (!preferredOrder.includes(key)) {\n      orderedData[key] = fieldData[key];\n    }\n  });\n\n  // Add hash\n  const hash = simpleHash(orderedData);\n  orderedData[\"hash\"] = hash;\n\n  // Add location formula column\n  const rowNumber = index + 2;\n  orderedData[\"Store\"] = `=SWITCH(L${rowNumber},\"Liguanea\", 103,\n \"Mandeville\", 104,\n \"Manchester\", 105,\n \"Greater Portmore\", 106,\n \"Portmore Mall\", 107,\n \"Duhaney Park\", 108,\n \"Westgate\", 109,\n \"Harbour View\", 111,\n \"Blue Diamond\", 112,\n \"D&Y Sav\", 118,\n \"Junction\", 119,\n \"Brunswick\", 121,\n \"Savanna-La-Mar\", 122,\n \"Whitter Village\", 123,\n \"Ocho Rios\", 124,\n \"Burke Road\", 125,\n \"May Pen\", 126,\n \"Bogue\", 127,\n \"Braeton\", 128,\n \"Portmore Pines\", 128,\n \"Boulevard\", 129,\n \"Head Office\", 1000,\n \"Linstead\", 901,\n \"JRs May Pen\", 902,\n-1)`;\n\n  // Add email formula column\n  orderedData[\"Owner\"] = `=SWITCH(D${rowNumber},\n \"Cheddi Goss\", \"cheddi.goss@pgjam.com\",\n \"Orane Phillips\", \"orane.phillips@pgjam.com\",\n \"Deron Dobson\", \"deron.dobson@pgjam.com\",\n \"Aaron Cummings\", \"aaron.cummings@pgjam.com\",\n \"COREY GRANT\", \"corey.grant@pgjam.com\",\n \"Keyaka Neil\", \"keyaka.neil@pgjam.com\",\n \"Gawayne Bromfield\", \"gawayne.bromfield@pgjam.com\",\n \"Tiffany Garrick\", \"Tiffany.Garrick@pgjam.com\",\n \"Christine Whyte\", \"christine.whyte@pgjam.com\",\n \"Owen Clashing\", \"owen.clashing@pgjam.com\",\n \"Alana Thompson\", \"alana.thompson@pgjam.com\",\n-1)`;\n\n  return {\n    json: {\n      ...orderedData,\n      hash\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        544,
        112
      ],
      "id": "d7f92a3a-0b61-4e7a-be6b-b518b792276e",
      "name": "API Ticket Hash"
    },
    {
      "parameters": {
        "jsCode": "// Mapping of status IDs to class types\nconst classMap = {\n  \"1\": \"open\",    // New\n  \"2\": \"open\",    // Open\n  \"4\": \"closed\",  // Resolved\n  \"5\": \"open\",    // Pending\n  \"6\": \"open\",    // Postponed\n  \"9\": \"open\",    // User Responded\n  \"10\": \"open\",   // Pending: Waiting on Hardware\n  \"11\": \"open\",   // Pending: Waiting on External Party\n  \"98976\": \"closed\", // Auto Archive\n  \"98980\": \"closed\"  // Merged-Archived\n};\n\n// Get the status list from previous node\nconst statusList = items[0].json.values || [];\n\n// Extract only the status IDs classified as \"open\"\nconst openStatusIDs = statusList\n  .filter(status => classMap[status.id] === \"open\")\n  .map(status => status.id);\n\n// Join into query string format\nconst statusQuery = `status=${openStatusIDs.join(\",\")}`;\n\n// Output it for use in the next API node\nreturn [\n  {\n    json: {\n      openStatusIDs,\n      statusQuery\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        144,
        0
      ],
      "id": "beb5fde3-4647-4203-bd01-66ee4641a0e3",
      "name": "Status IDs with Open"
    },
    {
      "parameters": {
        "url": "https://pgam.sysaidit.com/api/v1/list/status?entity=sr",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Cookie",
              "value": "={{ $json.cookieHeader }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        0
      ],
      "id": "0781137d-481c-49b6-8c3e-226febecaa69",
      "name": "Get Status List",
      "retryOnFail": true
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "1uvN_eVpP3XeWCAssZOay5N76KDawuU2Q_O3sDP3DML8",
          "mode": "list",
          "cachedResultName": "Ticket Data test",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1uvN_eVpP3XeWCAssZOay5N76KDawuU2Q_O3sDP3DML8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 377171780,
          "mode": "list",
          "cachedResultName": "Sheet3",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1uvN_eVpP3XeWCAssZOay5N76KDawuU2Q_O3sDP3DML8/edit#gid=377171780"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        368,
        320
      ],
      "id": "8a0b87f3-fb27-49c0-92df-21d49280012b",
      "name": "SheetRow",
      "retryOnFail": true,
      "executeOnce": true,
      "credentials": {
        "googleApi": {
          "id": "Fr8gBQ8Q5zSOdGfU",
          "name": "Google Service Account account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "function simpleHash(obj) {\n  const str = JSON.stringify(obj);\n  let hash = 0, i, chr;\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i);\n    hash = ((hash << 5) - hash) + chr;\n    hash |= 0;\n  }\n  return hash.toString();\n}\n\nreturn items.map(item => {\n  const data = item.json;\n  \n  function normalizeTime(t) {\n  return t.replace(/(\\s)(\\d{1}):/, '$10$2:');\n}\n\nconst hashBase = {\n  \"Request Time\": normalizeTime(data[\"Request Time\"] || \"\"),\n  Applicant: data[\"Applicant\"] || \"\",\n  \"Responsibility\": data[\"Responsibility\"] || \"\",\n  Status: data[\"Status\"] || \"\",\n  Priority: data[\"Priority\"] || \"\",\n  Category: data[\"Category\"] || \"\",\n  \"Sub Category\": data[\"Sub Category\"] || \"\",\n  \"Third Level Category\": data[\"Third Level Category\"] || \"\",\n  \"Difficulty Category\": data[\"Difficulty Category\"] || \"\",\n  Impact: data[\"Impact\"] || \"\",\n  Location: data[\"Location\"] || \"\",\n  \"Main CI\": data[\"Main CI\"] || \"\",\n  Title: data[\"Title\"]\n};\n\n  const recomputedHash = simpleHash(hashBase);\n  const storedHash = data.hash?.toString() || \"\";\n\n  return {\n  json: {\n    TicketID: data.TicketID?.toString() || \"\",\n    rowIndex: data.row_number,\n    recomputedHash,\n    hashBase: JSON.stringify(hashBase),  // <== Add this\n    storedHash,\n    _source: \"sheet\"\n  }\n};\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        544,
        320
      ],
      "id": "bd64f3c6-26d9-4018-9c68-c1ea6d652147",
      "name": "Hash Sheet Tickets"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "84d5b24b-fe87-4a21-91d6-8bb6ea8f408b",
              "leftValue": "={{ $json.rowIndex }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "notEmpty",
                "singleValue": true
              }
            },
            {
              "id": "06a5d9c4-166b-4a14-abf4-05197638e91d",
              "leftValue": "={{ $json.rowIndex }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1168,
        256
      ],
      "id": "b944a203-1310-4968-8618-6001792cc623",
      "name": "If",
      "executeOnce": false,
      "retryOnFail": true
    },
    {
      "parameters": {
        "jsCode": "const apiTicketIds = new Set($items(\"API Ticket Hash\").map(item => item.json.TicketID));\n\nconst closedTickets = $items(\"Hash Sheet Tickets\").filter(item => {\n  const sheetTicketId = item.json.TicketID;\n  return !apiTicketIds.has(sheetTicketId);\n});\n\nreturn closedTickets.map(item => ({\n  json: {\n    TicketID: item.json.TicketID,\n    rowIndex: item.json.rowIndex\n  }\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        976,
        256
      ],
      "id": "f7e34bbb-4780-4710-817b-dd8188e59d53",
      "name": "Find Closed Tickets",
      "retryOnFail": true,
      "executeOnce": false,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "operation": "delete",
        "documentId": {
          "__rl": true,
          "value": "1uvN_eVpP3XeWCAssZOay5N76KDawuU2Q_O3sDP3DML8",
          "mode": "list",
          "cachedResultName": "Ticket Data test",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1uvN_eVpP3XeWCAssZOay5N76KDawuU2Q_O3sDP3DML8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 377171780,
          "mode": "list",
          "cachedResultName": "Sheet3",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1uvN_eVpP3XeWCAssZOay5N76KDawuU2Q_O3sDP3DML8/edit#gid=377171780"
        },
        "startIndex": "={{ $json.rowIndex }}",
        "numberToDelete": "={{ $json.rowIndex + 1 }}"
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1408,
        240
      ],
      "id": "0e0fefce-4b12-48ed-bc4a-901e70559e8f",
      "name": "Delete rows or columns from sheet",
      "alwaysOutputData": false,
      "executeOnce": false,
      "retryOnFail": true,
      "credentials": {
        "googleApi": {
          "id": "Fr8gBQ8Q5zSOdGfU",
          "name": "Google Service Account account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        768,
        256
      ],
      "id": "c3397f06-2faf-40dc-a582-46bddd17bf15",
      "name": "Merge"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -608,
        112
      ],
      "id": "39f58448-87a5-429f-b615-c4c364fc1cf5",
      "name": "Schedule Trigger"
    }
  ],
  "connections": {
    "Login credentials": {
      "main": [
        [
          {
            "node": "Get cookie/sessionID's",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ApiTickets": {
      "main": [
        [
          {
            "node": "API Ticket Hash",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "API Ticket Hash": {
      "main": [
        [
          {
            "node": "Append or update row in sheet",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get cookie/sessionID's": {
      "main": [
        [
          {
            "node": "Get Status List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Status IDs with Open": {
      "main": [
        [
          {
            "node": "ApiTickets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Status List": {
      "main": [
        [
          {
            "node": "Status IDs with Open",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SheetRow": {
      "main": [
        [
          {
            "node": "Hash Sheet Tickets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Hash Sheet Tickets": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Delete rows or columns from sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Closed Tickets": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Find Closed Tickets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append or update row in sheet": {
      "main": [
        [
          {
            "node": "SheetRow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Login credentials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "e53f1a53-c223-4d42-b840-a607ec8754b5",
  "triggerCount": 0,
  "tags": []
}